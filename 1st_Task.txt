package LearnDS.Test;

import java.io.IOException;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.util.EntityUtils;
import org.json.JSONArray;
import org.json.JSONObject;

import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

public class Gson {

    public static int getRandomDoubleBetweenRange(int min, int max){
        int x = (int) ((Math.random()*((max-min)+1))+min);
        return x;
    }

    public static String http(String url, String body) {

        try (CloseableHttpClient httpClient = HttpClientBuilder.create().build()) {
            HttpGet request = new HttpGet(url);
            //StringEntity params = new StringEntity(body);
            request.addHeader("content-type", "application/json");
           // request.setEntity(params);
            HttpResponse result = httpClient.execute(request);
            String json = EntityUtils.toString(result.getEntity(), "UTF-8");
            return json;
        } catch (IOException ex) {
        	ex.printStackTrace();
        }
        return null;
    }

    public static String parse(String jsonLine) {
        JsonElement jelement = new JsonParser().parse(jsonLine);
        JsonObject  jobject = jelement.getAsJsonObject();
        jobject = jobject.getAsJsonObject("data");
        JsonArray jarray = jobject.getAsJsonArray("translations");
        jobject = jarray.get(0).getAsJsonObject();
        String result = jobject.get("translatedText").getAsString();
        return result;
    }

    public static void firstTask() {
    	System.out.println("First Task ");
    	int randomNum = getRandomDoubleBetweenRange(1, 10);
    	System.out.println("Random Number Generated : " + randomNum);
        // To JsonObject
        JSONObject obj = new JSONObject(http("http://jsonplaceholder.typicode.com/users/" + randomNum, ""));
        System.out.println("USERNAME : " + obj.get("name"));
        System.out.println("Full Address : " + obj.get("address"));
    }

    public static void secondTask() {
    	System.out.println("Second Task ");
    	String jsonArr = http("http://jsonplaceholder.typicode.com/users", "");
    	JSONArray jsonarray = new JSONArray(jsonArr);
    	for (int i = 0; i < jsonarray.length(); i++) {
    	    JSONObject jsonobject = jsonarray.getJSONObject(i);
    	    System.out.println("Name : " + jsonobject.getString("name"));
    	    System.out.println("Email : " + jsonobject.getString("email"));
    	    JSONObject address = jsonobject.getJSONObject("address");
    	    System.out.println("Geo : " + address.get("geo"));
    	    System.out.println();
    	}
    }

    public static void thirdTask() {
    	System.out.println("Third Task ");
    	String jsonArr = http("http://jsonplaceholder.typicode.com/comments", "");
    	JSONArray jsonarray = new JSONArray(jsonArr);
    	int commentCount [] = new int[100];
    	for(int k = 0; k < commentCount.length; k++) {
    		commentCount[k] = 0;
    	}

    	int indexofMaxComment = 0;
    	for (int i = 0; i < jsonarray.length(); i++) {
    	    JSONObject jsonobject = jsonarray.getJSONObject(i);
    	    String postId = jsonobject.get("postId").toString();
    	    commentCount[Integer.parseInt(postId) - 1] = commentCount[Integer.parseInt(postId) - 1] + 1;
    	}
    	for (int j = 0; j < commentCount.length; j++) {
    		if(commentCount[j] > indexofMaxComment) {
    			indexofMaxComment = j;
    		}
    	}

    	JSONObject jsonobjectneeded = jsonarray.getJSONObject(indexofMaxComment);
	    System.out.println("id : " + jsonobjectneeded.get("id"));
	    System.out.println("Email : " + jsonobjectneeded.getString("email"));
    }

    public static void main(String[] args) {
    	// firstTask();
    	// secondTask();
    	thirdTask();
    }
}